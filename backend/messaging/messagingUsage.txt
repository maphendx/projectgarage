Модуль Messaging в цьому проекті забезпечує можливості для організації чатів, обміну повідомленнями, додавання реакцій та інтеграції з WebSocket для комунікації в реальному часі.

1. Чатруми (ChatRoom):
   - **GET /chatrooms/**  
     Повертає список чатрумів, в яких поточний користувач є учасником.
   
   - **POST /chatrooms/**  
     Створює новий чатрум. При цьому:
       • Можна передати додаткове поле "participants_display_names" для включення інших користувачів у чат за їх display_name.  
       • Творець чату автоматично додається до списку учасників.

2. Додавання учасників:
   - **POST /chatrooms/<room_id>/add_user/**  
     Додає нових користувачів до існуючого чатруму.  
     • Передбачає передачу масиву "user_display_names", за яким визначаються користувачі.  
     • Якщо один або декілька користувачів не найдені – повертається відповідна помилка.

3. Аватар чатруму:
   - **PATCH /chatrooms/<room_id>/avatar/**  
     Оновлює аватар конкретного чатруму (з використанням MultiPartParser та FormParser).
   
   - **GET /chatrooms/<room_id>/avatar/**  
     Повертає дані аватару, якщо такий встановлено.

4. Повідомлення:
   - **GET /messages/<room_id>/**  
     Повертає список всіх повідомлень заданого чатруму, відсортованих за часом надсилання.
   
   - **POST /messages/<room_id>/**  
     Дозволяє надіслати нове повідомлення до конкретного чатруму.  
     • Перед відправкою перевіряється, чи є користувач учасником чатруму.  
     • В процесі надсилання повідомлення також розсилається через WebSocket (через channel_layer) до групи, що відповідає чатруму.

5. Реакції:
   - **GET /messages/<message_id>/reaction/**  
     Повертає всі реакції для зазначеного повідомлення.
   
   - **POST /messages/<message_id>/reaction/**  
     Додає або оновлює реакцію поточного користувача для повідомлення.  
     • Допустимі значення реакцій: like, love, laugh, wow, sad, angry.
   
   - **DELETE /messages/<message_id>/reaction/**  
     Видаляє реакцію поточного користувача для повідомлення.

6. Список емодзі:
   - **GET /emoji/**  
     Повертає список доступних емодзі (реакцій), дані яких завантажуються з файлу "reaction_list.json", розташованого за шляхом:
     backend/media/massang/emoji/reaction_list.json.

7. Реальний час (WebSocket):
   - Підключення до чату здійснюється через WebSocket за адресою:  
     **ws/chat/<room_name>/**  
     де <room_name> – назва чи ідентифікатор чатруму.
   
   - **ChatConsumer**  
     Реалізований у файлі `backend/messaging/consumers.py` і відповідає за прийом і розсилку повідомлень всім підключеним клієнтам.
   
   - При надсиланні повідомлення через API повідомлення публікується до групи WebSocket, що дозволяє всім учасникам миттєво отримувати оновлення.

8. Загальні аспекти:
   - **Аутентифікація:**  
     Усі API запити, окрім, можливо, отримання списку емодзі, захищені і вимагають автентифікації користувача.
   
   - **Валідація:**  
     Використовуються Django REST Framework serializers для перевірки даних (наприклад, перевірка допустимих значень для реакцій).
   
   - **Зв’язок з моделей:**  
     Для взаємодії даних використовується модель ChatRoom для чатів, Message для повідомлень і Reaction для реакцій, що забезпечує цілісність та консистентність даних.

Цей документ покликаний допомогти розробникам та кінцевим користувачам зрозуміти, як використовувати API модуля Messaging для реалізації чат-системи в додатку.