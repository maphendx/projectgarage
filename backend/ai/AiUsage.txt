Керівництво користувача для Suno API підпрограми
=================================================

Ця підпрограма інтегрується із Suno API для генерації аудіо, розширення музичних творів,
генерації текстів для пісень та отримання WAV-версій аудіо. Завдяки інтегрованим API-ендпоінтам,
ви можете створювати завдання, стежити за їх виконанням, перевіряти залишок кредитів і отримувати результати
через callback механізм.

-------------------------------------------------
1. Основні API-ендпоінти
-------------------------------------------------

**Генерація аудіо** (`/api/v1/generate/`)
- **Опис:** Створює завдання для генерації аудіо. Підтримуються як кастомні, так і стандартні режими генерації.
- **Обов'язкові параметри:**
  - `customMode` (boolean): Визначає, чи використовується кастомний режим.
  - `instrumental` (boolean): Вказує, чи має аудіо бути інструментальним (без текстів).
  - `callBackUrl` (string): URL, за яким буде надісланий callback із результатами генерації.
  - `model` (string): Версія моделі, наприклад, `V3_5` або `V4`.
- **Додаткові параметри:** 
  - Якщо `customMode` = true:
    - При генерації інструментальної музики – обов'язкові поля `style` і `title`.
    - При генерації пісень з текстом – також потрібно вказати `prompt`.

**Розширення аудіо** (`/api/v1/generate/extend/`)
- **Опис:** Створює завдання для розширення або модифікації існуючого аудіо.
- **Обов'язкові параметри:**
  - `defaultParamFlag` (boolean): Якщо true, використовуються кастомні параметри, тоді обов'язково потрібно вказати `continueAt`.
  - `audioId`: Ідентифікатор аудіо, яке потрібно розширити.
  - `callBackUrl`: URL для отримання callback з результатом.
  - `model`: Версія моделі (повинна відповідати оригінальному аудіо).
- **Додаткові параметри:** При `defaultParamFlag` = true потрібні додаткові параметри:
  - `prompt`, `style`, `title` та `continueAt`.

**Отримання інформації про завдання генерації** (`/api/v1/generate/record-info/`)
- **Опис:** Повертає деталі завдання генерації аудіо, включаючи статус та результати.
- **Параметри:** 
  - `taskId`: Ідентифікатор завдання, який повертається після створення генерації.

**Перевірка кредитів** (`/api/v1/credit/`)
- **Опис:** Дозволяє перевірити кількість залишкових кредитів, необхідних для виконання завдань.
- **Використання:** Виконайте GET-запит; повертається число, що означає кількість кредитів.

**Генерація текстів (лірики)** (`/api/v1/lyrics/`)
- **Опис:** Створює завдання для генерації тексту пісень або опису, використовуючи заданий prompt.
- **Обов'язкові параметри:**
  - `prompt`: Текст підказки, за яким буде згенеровано текст.
  - `callBackUrl`: URL, куди буде відправлено callback із результатом.

**Отримання інформації про завдання генерації текстів** (`/api/v1/lyrics/record-info/`)
- **Опис:** Повертає деталі завдання для генерації текстів, включаючи стан та отримані дані.
- **Параметри:**
  - `taskId`: Ідентифікатор завдання.

**Генерація WAV-версії аудіо** (`/api/v1/wav/generate/`)
- **Опис:** Створює завдання для генерації аудіо у форматі WAV на основі існуючого завдання генерації аудіо.
- **Обов'язкові параметри:**
  - `taskId`: Ідентифікатор початкового завдання генерації аудіо.
  - `audioId`: Ідентифікатор аудіо, яке потрібно конвертувати.
  - `callBackUrl`: URL для отримання callback із результатом.

**Отримання інформації про завдання генерації WAV** (`/api/v1/wav/record-info/`)
- **Опис:** Повертає деталі створеного завдання для генерації WAV-файлу.
- **Параметри:**
  - `taskId`: Ідентифікатор завдання.

-------------------------------------------------
2. Callback механізм
-------------------------------------------------

**Callback** (`/api/v1/callback/`)
- **Опис:** Цей ендпоінт отримує callback повідомлення від Suno API після завершення
  завдань генерації аудіо або текстів.
- **Особливості:**
  - Callback дані логуються у файл `callback_log.json`.
  - При отриманні успішного callback (код 200) відбувається завантаження аудіо та зображень
    за наданими URL-адресами.
  - Створюється запис у базі даних (модель `Song`), а також встановлюється зв'язок із відповідними стилями
    через модель `MusicStyle`.

-------------------------------------------------
3. Аутентифікація та налаштування
-------------------------------------------------

- **Аутентифікація:** 
  - Усі API-запити (за виключенням callback) вимагають автентифікації за допомогою Bearer Token.
  - Переконайтеся, що ваш API ключ збережено у змінній середовища `SUNO_API_KEY`.
  
- **Налаштування сховища:**
  - Файли аудіо та зображення зберігаються через систему сховища Django.
  - Завантажені дані записуються в директорії `ai/music` для аудіо та `ai/photo` для зображень.

-------------------------------------------------
4. Приклад використання
-------------------------------------------------

1. **Створення завдання генерації аудіо:**
   - Відправте POST-запит на `/api/v1/generate/` із зазначенням обов'язкових параметрів.
   - Отримайте `taskId` у відповіді та використовуйте його для подальшого відстеження статусу завдання через
     `/api/v1/generate/record-info/`.

2. **Розширення аудіо:**
   - Використовуйте ендпоінт `/api/v1/generate/extend/` для створення завдання розширення існуючого твору.
   - Передайте `audioId`, а також, якщо використовуєте кастомні параметри, – `prompt`, `style`, `title` та `continueAt`.

3. **Генерація текстів (лірик):**
   - Надішліть POST-запит на `/api/v1/lyrics/` із полем `prompt` та `callBackUrl`.
   - Отримайте `taskId` для подальшого контролю через `/api/v1/lyrics/record-info/`.

4. **Генерація WAV-аудіо:**
   - Відправте POST-запит на `/api/v1/wav/generate/` з використанням `taskId` і `audioId`.
   - Стежте за виконанням завдання через `/api/v1/wav/record-info/`.

-------------------------------------------------
5. Загальні рекомендації
-------------------------------------------------

- Переконайтесь, що ваша система відповідає всім вимогам (Django, DRF, налаштоване сховище файлів).
- Уважно заповнюйте обов'язкові параметри, щоб уникнути помилок при обробці запиту.
- Всі callback повідомлення зберігаються для подальшого аналізу в файлі `callback_log.json`.
- Докладну специфікацію API можна переглянути в OpenAPI документі (`document (1).json`).

-------------------------------------------------
Висновок
-------------------------------------------------

Ця підпрограма спрощує інтеграцію з Suno API, дозволяючи створювати, розширювати та отримувати результати генерації аудіо та текстів.
Використовуйте її як проміжний шар між вашим додатком та Suno API для оперативного керування завданнями та обробки результатів 
у режимі реального часу.
